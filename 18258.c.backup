#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main(){
	int n, count = 0, k = 0;
	char word[6];
	scanf("%d", &n);
	int* arr = (int*)malloc(sizeof(int) * count);
	int* result = (int*)malloc(sizeof(int) * k);
	for(int i = 0; i < n; i++){
		scanf("%s", word);
		if(!(strcmp(word, "push"))){
			count+=1;
			arr = realloc(arr, sizeof(int) * count);
			scanf("%d", &arr[count - 1]);
		}
		else if(!(strcmp(word, "pop"))){
			k+=1;
			result = realloc(result, sizeof(int) * k);
			if(count == 0) result[k - 1] = -1;
			else{
				result[k - 1] = arr[0];
				for(int j = 0; j < count - 1; j++) arr[j] = arr[j + 1];
				count-=1;
				arr = realloc(arr, sizeof(int) * count);
			}
		}
		else if(!(strcmp(word, "size"))){
			k+=1;
			result = realloc(result, sizeof(int) * k);
			result[k - 1] = count;
		}
		else if(!(strcmp(word, "empty"))){
			k+=1;
			result = realloc(result, sizeof(int) * k);
			count == 0 ? result[k - 1] = 1:(result[k - 1] = 0);
		}
		else if(!(strcmp(word, "front"))){
			k+=1;
			result = realloc(result, sizeof(int) * k);
			if(count == 0) result[k - 1] = -1;
			else result[k - 1] = arr[0];
		}
		else if(!(strcmp(word, "back"))){
			k+=1;
			result = realloc(result, sizeof(int) * k);
			if(count == 0) result[k - 1] = -1;
			else result[k - 1] = arr[count - 1];
		}
	}
	for(int i = 0; i < k; i++) printf("%d\n", result[i]);
	free(result);
	free(arr);
	return 0;
}
